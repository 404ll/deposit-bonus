import type { SuiClient } from '.pnpm/@mysten+sui@1.16.1_typescript@5.7.2/node_modules/@mysten/sui/dist/cjs/client/client.js';
import type { TransactionDataBuilder } from '.pnpm/@mysten+sui@1.16.1_typescript@5.7.2/node_modules/@mysten/sui/dist/cjs/transactions/TransactionData.js';
export interface BuildTransactionOptions {
    client?: SuiClient;
    onlyTransactionKind?: boolean;
}
export interface SerializeTransactionOptions extends BuildTransactionOptions {
    supportedIntents?: string[];
}
export type TransactionPlugin = (transactionData: TransactionDataBuilder, options: BuildTransactionOptions, next: () => Promise<void>) => Promise<void>;
export declare function resolveTransactionData(transactionData: TransactionDataBuilder, options: BuildTransactionOptions, next: () => Promise<void>): Promise<void>;
export declare function getClient(options: BuildTransactionOptions): SuiClient;
